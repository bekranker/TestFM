{"ast":null,"code":"var _jsxFileName = \"/Users/bekranker/website/src/Components/DashedCircle.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport \"../css/shape-circle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DashedCircle = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPos, setStartPos] = useState({\n    x: 0,\n    y: 0\n  });\n  const [circles, setCircles] = useState([]);\n  const handleMouseDown = e => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    setStartPos({\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    });\n    setIsDrawing(true);\n  };\n  const handleMouseMove = e => {\n    if (!isDrawing) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const rect = canvas.getBoundingClientRect();\n    const currentX = e.clientX - rect.left;\n    const currentY = e.clientY - rect.top;\n\n    // Tüm daireleri yeniden çizmek için canvas'ı temizle\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Mevcut daireleri çiz\n    circles.forEach(circle => {\n      ctx.beginPath();\n      ctx.setLineDash([5, 5]); // Kesik çizgi\n      ctx.arc(circle.x, circle.y, circle.radius, 0, Math.PI * 2);\n      ctx.strokeStyle = \"#ffffff\";\n      ctx.lineWidth = 2;\n      ctx.stroke();\n      ctx.setLineDash([]); // Kesik çizgiyi kapat\n    });\n\n    // Yeni daireyi geçici olarak çiz\n    const radius = Math.sqrt(Math.pow(currentX - startPos.x, 2) + Math.pow(currentY - startPos.y, 2));\n    ctx.beginPath();\n    ctx.setLineDash([5, 5]); // Kesik çizgi\n    ctx.arc(startPos.x, startPos.y, radius, 0, Math.PI * 2);\n    ctx.strokeStyle = \"#ffffff\";\n    ctx.lineWidth = 2;\n    ctx.stroke();\n    ctx.setLineDash([]); // Kesik çizgiyi kapat\n  };\n  const handleMouseUp = e => {\n    if (!isDrawing) return;\n    setIsDrawing(false);\n    const rect = canvasRef.current.getBoundingClientRect();\n    const endPos = {\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    };\n\n    // Yeni daireyi kaydet\n    const radius = Math.sqrt(Math.pow(endPos.x - startPos.x, 2) + Math.pow(endPos.y - startPos.y, 2));\n    const newCircle = {\n      x: startPos.x,\n      y: startPos.y,\n      radius: radius\n    };\n    setCircles([...circles, newCircle]); // Daireyi diziye ekle\n  };\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    width: \"1200px\",\n    height: \"800px\",\n    ref: canvasRef,\n    className: \"shape\",\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(DashedCircle, \"dtCVdX6FY4UY0/ehuAYBHRTFMYI=\");\n_c = DashedCircle;\nvar _c;\n$RefreshReg$(_c, \"DashedCircle\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","DashedCircle","_s","canvasRef","isDrawing","setIsDrawing","startPos","setStartPos","x","y","circles","setCircles","handleMouseDown","e","rect","current","getBoundingClientRect","clientX","left","clientY","top","handleMouseMove","canvas","ctx","getContext","currentX","currentY","clearRect","width","height","forEach","circle","beginPath","setLineDash","arc","radius","Math","PI","strokeStyle","lineWidth","stroke","sqrt","pow","handleMouseUp","endPos","newCircle","ref","className","onMouseDown","onMouseMove","onMouseUp","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bekranker/website/src/Components/DashedCircle.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport \"../css/shape-circle.css\";\n\nexport const DashedCircle = () => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPos, setStartPos] = useState({ x: 0, y: 0 });\n  const [circles, setCircles] = useState([]);\n\n  const handleMouseDown = (e) => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    setStartPos({\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top,\n    });\n    setIsDrawing(true);\n  };\n\n  const handleMouseMove = (e) => {\n    if (!isDrawing) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const rect = canvas.getBoundingClientRect();\n    const currentX = e.clientX - rect.left;\n    const currentY = e.clientY - rect.top;\n\n    // Tüm daireleri yeniden çizmek için canvas'ı temizle\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Mevcut daireleri çiz\n    circles.forEach((circle) => {\n      ctx.beginPath();\n      ctx.setLineDash([5, 5]); // Kesik çizgi\n      ctx.arc(circle.x, circle.y, circle.radius, 0, Math.PI * 2);\n      ctx.strokeStyle = \"#ffffff\";\n      ctx.lineWidth = 2;\n      ctx.stroke();\n      ctx.setLineDash([]); // Kesik çizgiyi kapat\n    });\n\n    // Yeni daireyi geçici olarak çiz\n    const radius = Math.sqrt(\n      Math.pow(currentX - startPos.x, 2) + Math.pow(currentY - startPos.y, 2)\n    );\n    ctx.beginPath();\n    ctx.setLineDash([5, 5]); // Kesik çizgi\n    ctx.arc(startPos.x, startPos.y, radius, 0, Math.PI * 2);\n    ctx.strokeStyle = \"#ffffff\";\n    ctx.lineWidth = 2;\n    ctx.stroke();\n    ctx.setLineDash([]); // Kesik çizgiyi kapat\n  };\n\n  const handleMouseUp = (e) => {\n    if (!isDrawing) return;\n    setIsDrawing(false);\n\n    const rect = canvasRef.current.getBoundingClientRect();\n    const endPos = {\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top,\n    };\n\n    // Yeni daireyi kaydet\n    const radius = Math.sqrt(\n      Math.pow(endPos.x - startPos.x, 2) + Math.pow(endPos.y - startPos.y, 2)\n    );\n    const newCircle = {\n      x: startPos.x,\n      y: startPos.y,\n      radius: radius,\n    };\n\n    setCircles([...circles, newCircle]); // Daireyi diziye ekle\n  };\n\n  return (\n    <canvas\n      width={\"1200px\"}\n      height={\"800px\"}\n      ref={canvasRef}\n      className=\"shape\"\n      onMouseDown={handleMouseDown}\n      onMouseMove={handleMouseMove}\n      onMouseUp={handleMouseUp}\n    />\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/bekranker/website/src/Components/navigationButtons.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport \"../css/navigationBar.css\";\nimport { animated } from \"react-spring\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction hoverMenu() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hover-menu\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"hover-menu-item-parent\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"hover-menu-item\",\n          children: \"sa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\nexport const NavigationButtons = ({\n  name,\n  onClickEvent,\n  customStyle\n}) => {\n  _s();\n  const menuRef = useRef(null);\n  const [hover, setHover] = useState(false);\n  const [bgColor, setBgColor] = useState(\"#333647\");\n  const leaveFunction = e => {\n    setBgColor(\"#333647\");\n    handleMouseLeave(e);\n  };\n  const hoverHandler = () => {\n    console.log(\"hovering\");\n    setHover(true);\n  };\n  const exitHover = () => {\n    console.log(\"exit hover\");\n    setHover(false);\n  };\n  const enterFunction = () => {\n    hoverHandler();\n    setBgColor(\"#7800e0\");\n  };\n  const clickFunction = () => {\n    if (onClickEvent === undefined) return;\n    onClickEvent();\n  };\n  const handleMouseLeave = e => {\n    const menuRect = menuRef.current.getBoundingClientRect();\n\n    // Menü dışına çıkıldığında yalnızca kapanacak\n    const isMouseInsideMenu = menuRect.left <= e.clientX && menuRect.right >= e.clientX && menuRect.top <= e.clientY && menuRect.bottom >= e.clientY;\n    if (!isMouseInsideMenu) {\n      exitHover();\n    }\n  };\n  const anim = useSpring({\n    opacity: showMenu ? 1 : 0,\n    transform: showMenu ? \"translateY(0)\" : \"translateY(-10px)\",\n    display: showMenu ? \"block\" : \"none\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    ref: menuRef,\n    className: \"item nav-button\",\n    onMouseDown: clickFunction,\n    onMouseLeave: e => leaveFunction(e),\n    onMouseEnter: enterFunction,\n    style: {\n      ...customStyle,\n      backgroundColor: bgColor\n    },\n    children: [name, hoverMenu]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(NavigationButtons, \"dMESxicslwnbu7My52pd08u92+o=\", true);\n_c = NavigationButtons;\nvar _c;\n$RefreshReg$(_c, \"NavigationButtons\");","map":{"version":3,"names":["React","useState","useRef","animated","jsxDEV","_jsxDEV","Fragment","_Fragment","hoverMenu","children","className","fileName","_jsxFileName","lineNumber","columnNumber","NavigationButtons","name","onClickEvent","customStyle","_s","menuRef","hover","setHover","bgColor","setBgColor","leaveFunction","e","handleMouseLeave","hoverHandler","console","log","exitHover","enterFunction","clickFunction","undefined","menuRect","current","getBoundingClientRect","isMouseInsideMenu","left","clientX","right","top","clientY","bottom","anim","useSpring","opacity","showMenu","transform","display","ref","onMouseDown","onMouseLeave","onMouseEnter","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/bekranker/website/src/Components/navigationButtons.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"../css/navigationBar.css\";\nimport { animated } from \"react-spring\";\n\nfunction hoverMenu() {\n  return (\n    <>\n      <div className=\"hover-menu\">\n        <ul className=\"hover-menu-item-parent\">\n          <li className=\"hover-menu-item\">sa</li>\n        </ul>\n      </div>\n    </>\n  );\n}\n\nexport const NavigationButtons = ({ name, onClickEvent, customStyle }) => {\n  const menuRef = useRef(null);\n\n  const [hover, setHover] = useState(false);\n  const [bgColor, setBgColor] = useState(\"#333647\");\n  const leaveFunction = (e) => {\n    setBgColor(\"#333647\");\n    handleMouseLeave(e);\n  };\n  const hoverHandler = () => {\n    console.log(\"hovering\");\n    setHover(true);\n  };\n  const exitHover = () => {\n    console.log(\"exit hover\");\n    setHover(false);\n  };\n  const enterFunction = () => {\n    hoverHandler();\n    setBgColor(\"#7800e0\");\n  };\n  const clickFunction = () => {\n    if (onClickEvent === undefined) return;\n    onClickEvent();\n  };\n\n  const handleMouseLeave = (e) => {\n    const menuRect = menuRef.current.getBoundingClientRect();\n\n    // Menü dışına çıkıldığında yalnızca kapanacak\n    const isMouseInsideMenu =\n      menuRect.left <= e.clientX &&\n      menuRect.right >= e.clientX &&\n      menuRect.top <= e.clientY &&\n      menuRect.bottom >= e.clientY;\n\n    if (!isMouseInsideMenu) {\n      exitHover();\n    }\n  };\n  const anim = useSpring({\n    opacity: showMenu ? 1 : 0,\n    transform: showMenu ? \"translateY(0)\" : \"translateY(-10px)\",\n    display: showMenu ? \"block\" : \"none\",\n  });\n  return (\n    <button\n      ref={menuRef}\n      className=\"item nav-button\"\n      onMouseDown={clickFunction}\n      onMouseLeave={(e) => leaveFunction(e)}\n      onMouseEnter={enterFunction}\n      style={{ ...customStyle, backgroundColor: bgColor }}\n    >\n      {name}\n      {hoverMenu}\n    </button>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
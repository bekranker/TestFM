{"ast":null,"code":"var _jsxFileName = \"/Users/bekranker/website/src/Components/DashedRectangle.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport \"../css/shape.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DashedRectangle = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPos, setStartPos] = useState({\n    x: 0,\n    y: 0\n  });\n  const [squares, setSquares] = useState([]);\n  const handleMouseDown = e => {\n    // Sadece sol tıklama (button 0) için çizim başlat\n    if (e.button !== 0) return;\n    const rect = canvasRef.current.getBoundingClientRect();\n    setStartPos({\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    });\n    setIsDrawing(true);\n  };\n  const handleMouseMove = e => {\n    if (!isDrawing) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const rect = canvas.getBoundingClientRect();\n    const currentX = e.clientX - rect.left;\n    const currentY = e.clientY - rect.top;\n\n    // Canvas'ı temizlemeden mevcut kareleri ve geçici kareyi çiz\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Kalıcı kareleri çiz\n    squares.forEach(square => {\n      ctx.beginPath();\n      ctx.setLineDash([5, 3]); // Kesik çizgi için ayar\n      ctx.rect(square.x, square.y, square.width, square.height);\n      ctx.strokeStyle = \"#ffffff\";\n      ctx.lineWidth = 2;\n      ctx.stroke();\n      ctx.setLineDash([]); // Normal çizime geri dön\n    });\n\n    // Geçici kareyi çiz\n    const width = currentX - startPos.x;\n    const height = currentY - startPos.y;\n    ctx.beginPath();\n    ctx.setLineDash([5, 3]); // Kesik çizgi için ayar\n    ctx.rect(startPos.x, startPos.y, width, height);\n    ctx.strokeStyle = \"#ffffff\";\n    ctx.lineWidth = 2;\n    ctx.stroke();\n    ctx.setLineDash([]); // Normal çizime geri dön\n  };\n  const handleMouseUp = e => {\n    if (!isDrawing) return;\n    setIsDrawing(false);\n    const rect = canvasRef.current.getBoundingClientRect();\n    const endPos = {\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    };\n\n    // Yeni çizilen kareyi kalıcı olarak ekle\n    const newSquare = {\n      x: startPos.x,\n      y: startPos.y,\n      width: endPos.x - startPos.x,\n      height: endPos.y - startPos.y\n    };\n    setSquares([...squares, newSquare]);\n  };\n  const handleContextMenu = e => {\n    e.preventDefault(); // Sağ tık menüsünü devre dışı bırak\n    const rect = canvasRef.current.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const clickY = e.clientY - rect.top;\n\n    // Tıklanan noktaya yakın bir kareyi bulun ve kaldır\n    const updatedSquares = squares.filter(square => !(clickX >= square.x && clickX <= square.x + square.width && clickY >= square.y && clickY <= square.y + square.height));\n    setSquares(updatedSquares);\n    redrawCanvas(updatedSquares);\n  };\n  const redrawCanvas = (squares, tempSquare = null) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Kalıcı kareleri çiz\n    squares.forEach(square => {\n      ctx.beginPath();\n      ctx.setLineDash([5, 3]);\n      ctx.rect(square.x, square.y, square.width, square.height);\n      ctx.strokeStyle = \"#ffffff\";\n      ctx.lineWidth = 2;\n      ctx.stroke();\n      ctx.setLineDash([]);\n    });\n\n    // Geçici kare varsa, onu da çiz\n    if (tempSquare) {\n      ctx.beginPath();\n      ctx.setLineDash([5, 3]);\n      ctx.rect(tempSquare.x, tempSquare.y, tempSquare.width, tempSquare.height);\n      ctx.strokeStyle = \"#ffffff\";\n      ctx.lineWidth = 2;\n      ctx.stroke();\n      ctx.setLineDash([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    width: \"1200px\",\n    height: \"800px\",\n    ref: canvasRef,\n    className: \"shape\",\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    onContextMenu: handleContextMenu // Sağ tık olayını dinle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(DashedRectangle, \"QbBBu779Js5MBjaooK82hDmklBQ=\");\n_c = DashedRectangle;\nvar _c;\n$RefreshReg$(_c, \"DashedRectangle\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","DashedRectangle","_s","canvasRef","isDrawing","setIsDrawing","startPos","setStartPos","x","y","squares","setSquares","handleMouseDown","e","button","rect","current","getBoundingClientRect","clientX","left","clientY","top","handleMouseMove","canvas","ctx","getContext","currentX","currentY","clearRect","width","height","forEach","square","beginPath","setLineDash","strokeStyle","lineWidth","stroke","handleMouseUp","endPos","newSquare","handleContextMenu","preventDefault","clickX","clickY","updatedSquares","filter","redrawCanvas","tempSquare","ref","className","onMouseDown","onMouseMove","onMouseUp","onContextMenu","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bekranker/website/src/Components/DashedRectangle.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport \"../css/shape.css\";\n\nexport const DashedRectangle = () => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPos, setStartPos] = useState({ x: 0, y: 0 });\n  const [squares, setSquares] = useState([]);\n\n  const handleMouseDown = (e) => {\n    // Sadece sol tıklama (button 0) için çizim başlat\n    if (e.button !== 0) return;\n\n    const rect = canvasRef.current.getBoundingClientRect();\n    setStartPos({\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top,\n    });\n    setIsDrawing(true);\n  };\n\n  const handleMouseMove = (e) => {\n    if (!isDrawing) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const rect = canvas.getBoundingClientRect();\n    const currentX = e.clientX - rect.left;\n    const currentY = e.clientY - rect.top;\n\n    // Canvas'ı temizlemeden mevcut kareleri ve geçici kareyi çiz\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Kalıcı kareleri çiz\n    squares.forEach((square) => {\n      ctx.beginPath();\n      ctx.setLineDash([5, 3]); // Kesik çizgi için ayar\n      ctx.rect(square.x, square.y, square.width, square.height);\n      ctx.strokeStyle = \"#ffffff\";\n      ctx.lineWidth = 2;\n      ctx.stroke();\n      ctx.setLineDash([]); // Normal çizime geri dön\n    });\n\n    // Geçici kareyi çiz\n    const width = currentX - startPos.x;\n    const height = currentY - startPos.y;\n    ctx.beginPath();\n    ctx.setLineDash([5, 3]); // Kesik çizgi için ayar\n    ctx.rect(startPos.x, startPos.y, width, height);\n    ctx.strokeStyle = \"#ffffff\";\n    ctx.lineWidth = 2;\n    ctx.stroke();\n    ctx.setLineDash([]); // Normal çizime geri dön\n  };\n\n  const handleMouseUp = (e) => {\n    if (!isDrawing) return;\n    setIsDrawing(false);\n\n    const rect = canvasRef.current.getBoundingClientRect();\n    const endPos = {\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top,\n    };\n\n    // Yeni çizilen kareyi kalıcı olarak ekle\n    const newSquare = {\n      x: startPos.x,\n      y: startPos.y,\n      width: endPos.x - startPos.x,\n      height: endPos.y - startPos.y,\n    };\n\n    setSquares([...squares, newSquare]);\n  };\n\n  const handleContextMenu = (e) => {\n    e.preventDefault(); // Sağ tık menüsünü devre dışı bırak\n    const rect = canvasRef.current.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const clickY = e.clientY - rect.top;\n\n    // Tıklanan noktaya yakın bir kareyi bulun ve kaldır\n    const updatedSquares = squares.filter(\n      (square) =>\n        !(\n          clickX >= square.x &&\n          clickX <= square.x + square.width &&\n          clickY >= square.y &&\n          clickY <= square.y + square.height\n        )\n    );\n\n    setSquares(updatedSquares);\n    redrawCanvas(updatedSquares);\n  };\n\n  const redrawCanvas = (squares, tempSquare = null) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Kalıcı kareleri çiz\n    squares.forEach((square) => {\n      ctx.beginPath();\n      ctx.setLineDash([5, 3]);\n      ctx.rect(square.x, square.y, square.width, square.height);\n      ctx.strokeStyle = \"#ffffff\";\n      ctx.lineWidth = 2;\n      ctx.stroke();\n      ctx.setLineDash([]);\n    });\n\n    // Geçici kare varsa, onu da çiz\n    if (tempSquare) {\n      ctx.beginPath();\n      ctx.setLineDash([5, 3]);\n      ctx.rect(tempSquare.x, tempSquare.y, tempSquare.width, tempSquare.height);\n      ctx.strokeStyle = \"#ffffff\";\n      ctx.lineWidth = 2;\n      ctx.stroke();\n      ctx.setLineDash([]);\n    }\n  };\n\n  return (\n    <canvas\n      width={\"1200px\"}\n      height={\"800px\"}\n      ref={canvasRef}\n      className=\"shape\"\n      onMouseDown={handleMouseDown}\n      onMouseMove={handleMouseMove}\n      onMouseUp={handleMouseUp}\n      onContextMenu={handleContextMenu} // Sağ tık olayını dinle\n    />\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}